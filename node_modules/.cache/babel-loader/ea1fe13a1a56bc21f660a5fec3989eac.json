{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/work/private/\\u535A\\u5BA2/reacrAdmin/src/reducer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from \"react\";\nimport asyncComponent from \"../component/asyncComponent\";\nimport { reducer } from './reducer';\nimport { getCookie } from './../util/cookie';\nexport const MyState = /*#__PURE__*/createContext();\nconst data = {\n  router: [],\n  routerList: [],\n  token: ''\n};\n\nif (sessionStorage.getItem('router')) {\n  data.router = JSON.parse(sessionStorage.getItem('router')).reduce((perv, cur, index) => {\n    if (index === 1) {\n      perv.children.forEach(i => {\n        i.component = asyncComponent(() => import(`@/pages/${i.path}`));\n      });\n    }\n\n    cur.children.forEach(i => {\n      i.component = asyncComponent(() => import(`@/pages/${i.path}`));\n    });\n    return perv.children.concat(cur.children);\n  });\n  data.token = getCookie('token');\n  data.routerList = JSON.parse(sessionStorage.getItem('router'));\n}\n\nexport default function App(props) {\n  _s();\n\n  let [state, dispatch] = useReducer(reducer, data);\n  return /*#__PURE__*/_jsxDEV(MyState.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"MeiFKHQ+neloOH5mUb4ajLhJlWY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/work/private/博客/reacrAdmin/src/reducer/index.js"],"names":["React","useReducer","createContext","asyncComponent","reducer","getCookie","MyState","data","router","routerList","token","sessionStorage","getItem","JSON","parse","reduce","perv","cur","index","children","forEach","i","component","path","concat","App","props","state","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,aAA1B,QAA8C,OAA9C;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAO,MAAMC,OAAO,gBAAGJ,aAAa,EAA7B;AACP,MAAMK,IAAI,GAAG;AACTC,EAAAA,MAAM,EAAC,EADE;AAETC,EAAAA,UAAU,EAAC,EAFF;AAGTC,EAAAA,KAAK,EAAC;AAHG,CAAb;;AAKA,IAAGC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAH,EAAoC;AAChCL,EAAAA,IAAI,CAACC,MAAL,GAAcK,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAX,EAA6CG,MAA7C,CAAoD,CAACC,IAAD,EAAMC,GAAN,EAAUC,KAAV,KAAkB;AAChF,QAAGA,KAAK,KAAK,CAAb,EAAe;AACXF,MAAAA,IAAI,CAACG,QAAL,CAAcC,OAAd,CAAsBC,CAAC,IAAI;AACvBA,QAAAA,CAAC,CAACC,SAAF,GAAcnB,cAAc,CAAC,MAAI,OAAQ,WAAUkB,CAAC,CAACE,IAAK,EAAzB,CAAL,CAA5B;AACH,OAFD;AAGH;;AACDN,IAAAA,GAAG,CAACE,QAAJ,CAAaC,OAAb,CAAqBC,CAAC,IAAI;AACtBA,MAAAA,CAAC,CAACC,SAAF,GAAcnB,cAAc,CAAC,MAAI,OAAQ,WAAUkB,CAAC,CAACE,IAAK,EAAzB,CAAL,CAA5B;AAEH,KAHD;AAIA,WAAOP,IAAI,CAACG,QAAL,CAAcK,MAAd,CAAqBP,GAAG,CAACE,QAAzB,CAAP;AACH,GAXa,CAAd;AAYAZ,EAAAA,IAAI,CAACG,KAAL,GAAaL,SAAS,CAAC,OAAD,CAAtB;AACAE,EAAAA,IAAI,CAACE,UAAL,GAAkBI,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAX,CAAlB;AACH;;AACD,eAAe,SAASa,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAE/B,MAAI,CAACC,KAAD,EAAOC,QAAP,IAAmB3B,UAAU,CAACG,OAAD,EAASG,IAAT,CAAjC;AAEA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACoB,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAzB;AAAA,cACKF,KAAK,CAACP;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAVuBM,G;;KAAAA,G","sourcesContent":["import React, {useReducer,createContext} from \"react\";\nimport asyncComponent from \"../component/asyncComponent\";\nimport {reducer} from './reducer'\nimport {getCookie} from './../util/cookie'\nexport const MyState = createContext();\nconst data = {\n    router:[],\n    routerList:[],\n    token:''\n}\nif(sessionStorage.getItem('router')){\n    data.router = JSON.parse(sessionStorage.getItem('router')).reduce((perv,cur,index)=>{\n        if(index === 1){\n            perv.children.forEach(i => {\n                i.component = asyncComponent(()=>import(`@/pages/${i.path}`));\n            })\n        }\n        cur.children.forEach(i => {\n            i.component = asyncComponent(()=>import(`@/pages/${i.path}`));\n\n        })\n        return perv.children.concat(cur.children);\n    })\n    data.token = getCookie('token');\n    data.routerList = JSON.parse(sessionStorage.getItem('router'));\n}\nexport default function App(props) {\n\n    let [state,dispatch] = useReducer(reducer,data)\n\n    return(\n        <MyState.Provider value={{state,dispatch}}>\n            {props.children}\n        </MyState.Provider>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}