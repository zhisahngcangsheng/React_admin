{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/work/private/\\u535A\\u5BA2/reacrAdmin/src/pages/lock/lock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Button, Form, Input } from \"antd\";\nimport { LockOutlined } from \"@ant-design/icons\";\nimport { MyState } from \"../../reducer\";\nimport { removeCookie } from \"../../util/cookie\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nexport default function Lock() {\n  _s();\n\n  const history = useHistory();\n  const {\n    state,\n    dispatch\n  } = useContext(MyState);\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    if (!state.lock) {\n      sessionStorage.clear();\n      removeCookie('Token');\n      history.push('/login');\n    }\n  }, []);\n\n  function onFinish(e) {\n    if (e.password === state.lock) {\n      dispatch({\n        type: 'setLock',\n        lock: false\n      });\n      history.goBack(1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"normal_login\",\n      className: \"login-form\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: t('password')\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n            className: \"site-form-item-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this),\n          type: \"password\",\n          placeholder: t('password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: \"login-form-button\",\n          children: t('determine')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Lock, \"kR85zqRWK3eG3wQ4AyD7XXYRETA=\", false, function () {\n  return [useHistory, useTranslation];\n});\n\n_c = Lock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lock\");","map":{"version":3,"sources":["/Users/work/private/博客/reacrAdmin/src/pages/lock/lock.jsx"],"names":["React","useContext","useEffect","Button","Form","Input","LockOutlined","MyState","removeCookie","useTranslation","useHistory","Lock","history","state","dispatch","t","lock","sessionStorage","clear","push","onFinish","e","password","type","goBack","remember","required","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,eAAe,SAASC,IAAT,GAAiB;AAAA;;AAC5B,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM;AAACG,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAmBb,UAAU,CAACM,OAAD,CAAnC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AACAP,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACW,KAAK,CAACG,IAAV,EAAe;AACXC,MAAAA,cAAc,CAACC,KAAf;AACAV,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACAI,MAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACH;AACJ,GANQ,EAMP,EANO,CAAT;;AAOA,WAASC,QAAT,CAAkBC,CAAlB,EAAoB;AAChB,QAAGA,CAAC,CAACC,QAAF,KAAeT,KAAK,CAACG,IAAxB,EAA6B;AACzBF,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAC,SADA;AAELP,QAAAA,IAAI,EAAC;AAFA,OAAD,CAAR;AAIAJ,MAAAA,OAAO,CAACY,MAAR,CAAe,CAAf;AACH;AACJ;;AACD,sBACI;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,IAAI,EAAC,cADT;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,aAAa,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAHnB;AAII,MAAA,QAAQ,EAAEL,QAJd;AAAA,8BAMI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,KAAK,EAAE,CAAC;AAAEM,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAEZ,CAAC,CAAC,UAAD;AAA5B,SAAD,CAFX;AAAA,+BAII,QAAC,KAAD;AACI,UAAA,MAAM,eAAE,QAAC,YAAD;AAAc,YAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADZ;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,WAAW,EAAEA,CAAC,CAAC,UAAD;AAHlB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cANJ,eAgBI,QAAC,IAAD,CAAM,IAAN;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAyC,UAAA,SAAS,EAAC,mBAAnD;AAAA,oBACKA,CAAC,CAAC,WAAD;AADN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA2BH;;GA/CuBJ,I;UACJD,U,EAEFD,c;;;KAHME,I","sourcesContent":["import React, {useContext,useEffect} from 'react';\nimport {Button, Form, Input} from \"antd\";\nimport {LockOutlined} from \"@ant-design/icons\";\nimport {MyState} from \"../../reducer\";\nimport {removeCookie} from \"../../util/cookie\";\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router-dom\";\nexport default function Lock () {\n    const history = useHistory();\n    const {state,dispatch} = useContext(MyState);\n    const { t } = useTranslation();\n    useEffect(()=>{\n        if(!state.lock){\n            sessionStorage.clear();\n            removeCookie('Token');\n            history.push('/login')\n        }\n    },[])\n    function onFinish(e){\n        if(e.password === state.lock){\n            dispatch({\n                type:'setLock',\n                lock:false\n            })\n            history.goBack(1);\n        }\n    }\n    return(\n        <>\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    name=\"password\"\n                    rules={[{ required: true, message: t('password') }]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder={t('password')}\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        {t('determine')}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}